[{"/Users/jabeedkhan/Documents/my-app/src/reportWebVitals.js":"1","/Users/jabeedkhan/Documents/my-app/src/App.js":"2","/Users/jabeedkhan/Documents/my-app/src/index.js":"3","/Users/jabeedkhan/Documents/my-app/src/components/login.js":"4","/Users/jabeedkhan/Documents/my-app/src/components/signup.js":"5","/Users/jabeedkhan/Documents/my-app/src/DbClient.js":"6","/Users/jabeedkhan/Documents/my-app/src/components/history.js":"7","/Users/jabeedkhan/Documents/my-app/src/NavBar/SidebarData.js":"8","/Users/jabeedkhan/Documents/my-app/src/NavBar/Navbar.js":"9","/Users/jabeedkhan/Documents/my-app/src/pages/Profile.js":"10","/Users/jabeedkhan/Documents/my-app/src/pages/Logout.js":"11","/Users/jabeedkhan/Documents/my-app/src/pages/Home.js":"12"},{"size":362,"mtime":1606916602278,"results":"13","hashOfConfig":"14"},{"size":1738,"mtime":1607520593348,"results":"15","hashOfConfig":"14"},{"size":603,"mtime":1607000388466,"results":"16","hashOfConfig":"14"},{"size":3251,"mtime":1607179371390,"results":"17","hashOfConfig":"14"},{"size":4835,"mtime":1607333826645,"results":"18","hashOfConfig":"14"},{"size":2705,"mtime":1607090829786,"results":"19","hashOfConfig":"14"},{"size":84,"mtime":1607156402232,"results":"20","hashOfConfig":"14"},{"size":507,"mtime":1607163437378,"results":"21","hashOfConfig":"14"},{"size":1372,"mtime":1597681306000,"results":"22","hashOfConfig":"14"},{"size":157,"mtime":1607163743546,"results":"23","hashOfConfig":"14"},{"size":153,"mtime":1607163735367,"results":"24","hashOfConfig":"14"},{"size":1239,"mtime":1607421087528,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"zv8yia",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"28"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":4,"source":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/jabeedkhan/Documents/my-app/src/reportWebVitals.js",[],["60","61"],"/Users/jabeedkhan/Documents/my-app/src/App.js",[],"/Users/jabeedkhan/Documents/my-app/src/index.js",["62"],"import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n// import * as serviceWorker from \"./serviceWorker\";\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["63","64"],"/Users/jabeedkhan/Documents/my-app/src/components/login.js",["65","66","67"],"import React, { Component } from \"react\";\nimport { BrowserRouter as Link } from \"react-router-dom\";\n// import { getLoginUserInformatiomFromDb}   from '../../src/DbClient';\nexport default class Login extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            username: '',\n            password: '',\n            userInfo: [],\n        }\n    }\n    getLoginUserInformation = async(username, password) => {\n        const response = await fetch('http://localhost:3001/login', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({username, password}),\n        });\n        const json = await response.json();\n        if (json && json.length > 0) {\n            this.setState({ userInfo: json });\n            localStorage.setItem('isLoginSuccess ', true);\n            this.props.history.push({ pathname: '/home', state: { userInfo: json[0]} });\n        } else {\n            alert('Invalide Username and Password');\n        }\n    }\n    validateLoginInfo = async (event) => {\n        event.preventDefault();\n        console.log('validateLoginInfo function called');\n        const username = this.state.username;\n        const password = this.state.password;\n        console.log('user name ', username);\n        console.log('password ', password);\n        if (username.length === 0 || password.length === 0) {\n            alert('User Name and Password can not be empty');\n            return false;\n        }\n        const response = await this.getLoginUserInformation(username,password);\n        // return false;\n        // const value = await getLoginUserInformatiomFromDb(username, password, event);\n        // return value || false;\n    }\n    \n    handelUsername = (event) =>{\n        this.setState({\n            username : event.target.value\n        })\n    }\n    handelPassword = (event) =>{\n        this.setState({\n            password : event.target.value\n        })\n    }\n    render() {\n        return (\n            <form>\n                <h3>Sign In</h3>\n\n                <div className=\"form-group\">\n                    <label>Email address</label>\n                    <input type=\"email\" className=\"form-control\" placeholder=\"Enter email\" onChange={this.handelUsername}/>\n                </div>\n\n                <div className=\"form-group\">\n                    <label>Password</label>\n                    <input type=\"password\" className=\"form-control\" placeholder=\"Enter password\" onChange={this.handelPassword}/>\n                </div>\n\n                <div className=\"form-group\">\n                    <div className=\"custom-control custom-checkbox\">\n                        <input type=\"checkbox\" className=\"custom-control-input\" id=\"customCheck1\" />\n                        <label className=\"custom-control-label\" htmlFor=\"customCheck1\">Remember me</label>\n                    </div>\n                </div>\n\n                <button type=\"submit\" className=\"btn btn-primary btn-block\"  onClick={this.validateLoginInfo} >Submit</button>\n                <p className=\"forgot-password text-right\">\n                    Forgot <a href=\"#\">password?</a>\n                </p>\n            </form>\n        );\n    }\n}\n",["68","69"],"/Users/jabeedkhan/Documents/my-app/src/components/signup.js",["70","71"],"import React, { Component } from \"react\";\nimport history from './history';\n\nexport default class SignUp extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            fname: '',\n            lname: '',\n            signupemail: '',\n            signuppassword: '',\n            city: '',\n            disableSubmitButton: false,\n        }\n    }\n    insertNewUserInfomation = async(username, firstname, lastname, password, city) => {\n        const response = await fetch('http://localhost:3001/users', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({username, firstname, lastname, password, city}),\n        });\n        const json = await response.json();\n        if (json && json.status === 'error' && json.type === 'USER_EXITS') {\n            alert('User already exits. Please try with different Id');\n            return false;\n        }\n        if (json && json.status) {\n            alert('Registration successful. Please login');\n            this.props.history.push('/sign-in');\n        } else {\n            alert('Invalide Username and Password');\n        }\n    }\n\n    validateSignupInformation = async(event) => {\n        event.preventDefault();\n        const fname = this.state.fname;\n        const lname = this.state.lname;\n        const signupemail = this.state.signupemail;\n        const signuppassword = this.state.signuppassword;\n        const city = this.state.city;\n        if (fname.length === 0 || lname.length === 0 || signupemail.length === 0 || signuppassword.length === 0 || city.length === 0) {\n            alert('Form fields can not be empty');\n            return false;\n        }\n        const response = await this.insertNewUserInfomation(signupemail, fname, lname, signuppassword, city);\n\n        return true\n    }\n    handelFirstname = (event) => {\n        this.setState({\n            fname: event.target.value\n        })\n    }\n    handelLastname = (event) => {\n        this.setState({\n            lname: event.target.value\n        })\n    }\n    handelEmail = (event) => {\n        this.setState({\n            signupemail: event.target.value\n        })\n    }\n    handelPassword = (event) => {\n        this.setState({\n            signuppassword: event.target.value\n        })\n    }\n    handelCity = (event) => {\n        this.setState({\n            city: event.target.value\n        })\n    }\n    checkEmailId = async() => {\n        const { signupemail: username } = this.state;\n        const response = await fetch('http://localhost:3001/validateEmailId', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({username}),\n        });\n        const json = await response.json();\n        if (json && json.status === 'error' && json.type === 'USER_EXITS') {\n            alert('User already exits. Please try with different Id');\n            this.setState({ disableSubmitButton: true });\n        } else {\n            console.log('json ', json);\n            this.setState({ disableSubmitButton: false });\n        }\n    }\n    render() {\n        return (\n            <form>\n                <h3>Sign Up</h3>\n                <div className=\"form-group\">\n                    <label>First name</label>\n                    <input type=\"text\" className=\"form-control\" placeholder=\"First name\" onChange={this.handelFirstname}/>\n                </div>\n\n                <div className=\"form-group\">\n                    <label>Last name</label>\n                    <input type=\"text\" className=\"form-control\" placeholder=\"Last name\" onChange={this.handelLastname}/>\n                </div>\n\n                <div className=\"form-group\">\n                    <label>Email address</label>\n                    <input type=\"email\" className=\"form-control\" placeholder=\"Enter email\" onChange={this.handelEmail} onBlur={this.checkEmailId}/>\n                </div>\n\n                <div className=\"form-group\">\n                    <label>Password</label>\n                    <input type=\"password\" className=\"form-control\" placeholder=\"Enter password\" onChange={this.handelPassword}/>\n                </div>\n\n                <div className=\"form-group\">\n                    <label>City</label>\n                    <input type=\"city\" className=\"form-control\" placeholder=\"Enter City\" onChange={this.handelCity}/>\n                </div>\n\n                <button type=\"submit\" className=\"btn btn-primary btn-block\" onClick={this.validateSignupInformation} disabled={this.state.disableSubmitButton}>Sign Up</button>\n                {/* <p className=\"forgot-password text-right\">\n                    Already registered <a href=\"#\">sign in?</a>\n                </p> */}\n            </form>\n        );\n    }\n}","/Users/jabeedkhan/Documents/my-app/src/DbClient.js",["72","73","74","75","76","77","78"],"import React, { Component } from 'react'\nconst { Client} = require('pg')\nconst client = new Client({\n    user: 'postgres',\n    host: 'localhost',\n    database: 'postgres',\n    password: 'postgres',\n    port: 5432,\n  });\nexport const  dbConnection = () => {\n  const query = `CREATE TABLE IF NOT EXISTS users ( emailId varchar NOT NULL PRIMARY KEY, firstName varchar, lastName varchar, password varchar, city varchar, imageUrl varchar)`;\n  client.connect().\n  then(() => {\n    console.log('Database connected successfully');\n  }).\n  then(() => {\n    client.query(query);\n  }).\n  then(() => {\n    console.log('users table created successfully');\n  }).\n  catch((e) =>{\n    alert('Unable to connect db. Please check db config');\n  });\n};\nexport const insertNewUserInfomation = async (emailId, firstName, lastName, password, city) => {\n    const query = `\n      INSERT INTO users (emailId, firstName, lastName, city, password)\n      VALUES ('${emailId}', '${firstName}', '${lastName}', '${city}', '${password}')\n    `;\n  \n    console.log('query ', query);\n   \n    try {\n      const result = await client.query(query);\n      alert(\"New user created successfully. Please login\");\n      console.log('New user informated added into db');\n    } catch(e) {\n      console.log('error in insert query ', e);\n    } finally {\n      client.end();\n    }\n};\n\nexport const getLoginUserInformatiomFromDb = async (username, password, event) => {\n    const query = `SELECT * FROM users WHERE emailId='${username}' AND password='${password}'`;\n    console.log('query ', query);\n    try {\n        const result = await client.query(query);\n        const userArrary = result.rows;\n        if(userArrary.length === 0){\n            event.preventDefault();\n            event.stopPropagation();\n            alert('Invalide User Name And Password');\n            return false;\n        } else {\n          console.log('Logged in user details ', userArrary);\n          const userInfo = userArrary[0];\n          if (userInfo) {\n            localStorage.setItem(\"city\", userInfo.city);\n            localStorage.setItem(\"firstname\", userInfo.firstname);\n            localStorage.setItem(\"lastname\", userInfo.lastname);\n            localStorage.setItem(\"emailid\", userInfo.emailid);\n          }\n          window.location.href = \"HomePage.html\";\n            // window.location.href = \"HomePage.html\";\n            // ipcRenderer.send('toggle-homescreen')\n            return true;\n        }\n      } catch(e) {\n        console.log('error in select query ', e);\n        event.preventDefault();\n        return false;\n      } finally {\n        // client.end();\n        console.log('finally block');\n      }\n  };\n  \nexport default class DbClient {\n}   \n\n","/Users/jabeedkhan/Documents/my-app/src/components/history.js",[],"/Users/jabeedkhan/Documents/my-app/src/NavBar/SidebarData.js",[],"/Users/jabeedkhan/Documents/my-app/src/NavBar/Navbar.js",[],["79","80"],"/Users/jabeedkhan/Documents/my-app/src/pages/Profile.js",[],["81","82"],"/Users/jabeedkhan/Documents/my-app/src/pages/Logout.js",[],["83","84"],"/Users/jabeedkhan/Documents/my-app/src/pages/Home.js",["85","86"],{"ruleId":"87","replacedBy":"88"},{"ruleId":"89","replacedBy":"90"},{"ruleId":"91","severity":1,"message":"92","line":3,"column":10,"nodeType":"93","messageId":"94","endLine":3,"endColumn":23},{"ruleId":"87","replacedBy":"95"},{"ruleId":"89","replacedBy":"96"},{"ruleId":"91","severity":1,"message":"97","line":2,"column":27,"nodeType":"93","messageId":"94","endLine":2,"endColumn":31},{"ruleId":"91","severity":1,"message":"98","line":41,"column":15,"nodeType":"93","messageId":"94","endLine":41,"endColumn":23},{"ruleId":"99","severity":1,"message":"100","line":81,"column":28,"nodeType":"101","endLine":81,"endColumn":40},{"ruleId":"87","replacedBy":"102"},{"ruleId":"89","replacedBy":"103"},{"ruleId":"91","severity":1,"message":"104","line":2,"column":8,"nodeType":"93","messageId":"94","endLine":2,"endColumn":15},{"ruleId":"91","severity":1,"message":"98","line":48,"column":15,"nodeType":"93","messageId":"94","endLine":48,"endColumn":23},{"ruleId":"91","severity":1,"message":"105","line":1,"column":8,"nodeType":"93","messageId":"94","endLine":1,"endColumn":13},{"ruleId":"91","severity":1,"message":"106","line":1,"column":17,"nodeType":"93","messageId":"94","endLine":1,"endColumn":26},{"ruleId":"107","severity":1,"message":"108","line":12,"column":19,"nodeType":"109","messageId":"110","endLine":12,"endColumn":20,"fix":"111"},{"ruleId":"107","severity":1,"message":"108","line":15,"column":5,"nodeType":"109","messageId":"110","endLine":15,"endColumn":6,"fix":"112"},{"ruleId":"107","severity":1,"message":"108","line":18,"column":5,"nodeType":"109","messageId":"110","endLine":18,"endColumn":6,"fix":"113"},{"ruleId":"107","severity":1,"message":"108","line":21,"column":5,"nodeType":"109","messageId":"110","endLine":21,"endColumn":6,"fix":"114"},{"ruleId":"91","severity":1,"message":"115","line":35,"column":13,"nodeType":"93","messageId":"94","endLine":35,"endColumn":19},{"ruleId":"87","replacedBy":"116"},{"ruleId":"89","replacedBy":"117"},{"ruleId":"87","replacedBy":"118"},{"ruleId":"89","replacedBy":"119"},{"ruleId":"87","replacedBy":"120"},{"ruleId":"89","replacedBy":"121"},{"ruleId":"91","severity":1,"message":"122","line":2,"column":10,"nodeType":"93","messageId":"94","endLine":2,"endColumn":21},{"ruleId":"123","severity":1,"message":"124","line":5,"column":3,"nodeType":"125","messageId":"126","endLine":7,"endColumn":4},"no-native-reassign",["127"],"no-negated-in-lhs",["128"],"no-unused-vars","'BrowserRouter' is defined but never used.","Identifier","unusedVar",["127"],["128"],"'Link' is defined but never used.","'response' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement",["127"],["128"],"'history' is defined but never used.","'React' is defined but never used.","'Component' is defined but never used.","dot-location","Expected dot to be on same line as property.","MemberExpression","expectedDotBeforeProperty",{"range":"129","text":"130"},{"range":"131","text":"130"},{"range":"132","text":"130"},{"range":"133","text":"130"},"'result' is assigned a value but never used.",["127"],["128"],["127"],["128"],["127"],["128"],"'useLocation' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","no-global-assign","no-unsafe-negation",[454,458],"\n  .",[527,531],[573,577],[647,651]]